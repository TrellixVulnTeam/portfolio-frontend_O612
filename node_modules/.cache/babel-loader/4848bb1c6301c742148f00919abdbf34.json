{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Repos/portfolio-frontend/src/Components/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MobileNavigation from \"./MobileNavigation\";\nimport Navigation from \"./Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  _s();\n\n  // State hooks\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\n  const [visible, setVisible] = useState(true); // ? Handle scroll  - scroll is visible on scroll up and not on scroll down\n\n  const handleScroll = () => {\n    // find current scroll position\n    const currentScrollPos = window.scrollY; // Set state based on location\n\n    setVisible(prevScrollPos > currentScrollPos || currentScrollPos < 20); // Set state to new scroll position\n\n    setPrevScrollPos(currentScrollPos);\n  }; // useEffect\n\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }); // ? Detect scroll direction to change colour on scroll up\n\n  const [bgChange, setBgChange] = useState(false);\n\n  const changeNavBarColor = () => {\n    if (window.scrollY > 80) {\n      setBgChange(true);\n    } else {\n      setBgChange(false);\n    }\n  };\n\n  window.addEventListener(\"scroll\", changeNavBarColor);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      top: visible ? \"0\" : \"-100px\"\n    },\n    className: \"nav-bar nav-coloured-bg\",\n    children: [/*#__PURE__*/_jsxDEV(MobileNavigation, {\n      bgChange: bgChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      bgChange: bgChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"J/jVV83raeK3btZrB7s9/hK3R/0=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/dci/Desktop/Repos/portfolio-frontend/src/Components/NavBar/NavBar.js"],"names":["React","useState","useEffect","MobileNavigation","Navigation","NavBar","prevScrollPos","setPrevScrollPos","visible","setVisible","handleScroll","currentScrollPos","window","scrollY","addEventListener","removeEventListener","bgChange","setBgChange","changeNavBarColor","top"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC,CAHmB,CAKnB;;AACA,QAAMS,YAAY,GAAG,MAAM;AACzB;AACA,UAAMC,gBAAgB,GAAGC,MAAM,CAACC,OAAhC,CAFyB,CAIzB;;AACAJ,IAAAA,UAAU,CAACH,aAAa,GAAGK,gBAAhB,IAAoCA,gBAAgB,GAAG,EAAxD,CAAV,CALyB,CAOzB;;AACAJ,IAAAA,gBAAgB,CAACI,gBAAD,CAAhB;AACD,GATD,CANmB,CAiBnB;;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC;AAEA,WAAO,MAAME,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACD,GAJQ,CAAT,CAlBmB,CAwBnB;;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMiB,iBAAiB,GAAG,MAAM;AAC9B,QAAIN,MAAM,CAACC,OAAP,GAAiB,EAArB,EAAyB;AACvBI,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAND;;AAQAL,EAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCI,iBAAlC;AAEA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,GAAG,EAAEX,OAAO,GAAG,GAAH,GAAS;AAAvB,KADT;AAEE,IAAA,SAAS,EAAC,yBAFZ;AAAA,4BAIE,QAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEQ;AAA5B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9CD;;GAAMX,M;;KAAAA,M;AAgDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MobileNavigation from \"./MobileNavigation\";\nimport Navigation from \"./Navigation\";\n\nconst NavBar = () => {\n  // State hooks\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\n  const [visible, setVisible] = useState(true);\n\n  // ? Handle scroll  - scroll is visible on scroll up and not on scroll down\n  const handleScroll = () => {\n    // find current scroll position\n    const currentScrollPos = window.scrollY;\n\n    // Set state based on location\n    setVisible(prevScrollPos > currentScrollPos || currentScrollPos < 20);\n\n    // Set state to new scroll position\n    setPrevScrollPos(currentScrollPos);\n  };\n\n  // useEffect\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  });\n\n  // ? Detect scroll direction to change colour on scroll up\n  const [bgChange, setBgChange] = useState(false);\n\n  const changeNavBarColor = () => {\n    if (window.scrollY > 80) {\n      setBgChange(true);\n    } else {\n      setBgChange(false);\n    }\n  };\n\n  window.addEventListener(\"scroll\", changeNavBarColor);\n\n  return (\n    <div\n      style={{ top: visible ? \"0\" : \"-100px\" }}\n      className=\"nav-bar nav-coloured-bg\"\n    >\n      <MobileNavigation bgChange={bgChange} />\n      <Navigation bgChange={bgChange} />\n    </div>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}