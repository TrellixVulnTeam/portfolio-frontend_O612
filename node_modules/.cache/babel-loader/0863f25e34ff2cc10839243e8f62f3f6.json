{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Repos/portfolio-frontend/src/Views/WebApps/Password-Generator/PasswordGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordGenerator = () => {\n  _s();\n  // Charset\n  const charset = \"abcdefghijklmnopqrstuvwxyz0123456789!ยง$%&/()=?#,;.:-_\";\n\n  // ? State Hooks\n  // Password\n  let [password, setPassword] = useState(\"\");\n  // length of password\n  let [passwordLength, setPasswordLength] = useState();\n  // Mixed Case\n  let [mixedCase, setMixedCase] = useState(false);\n\n  // ? Collect user input Data 'onChange' event\n  const collectInput = event => {\n    switch (event.target.name) {\n      // Collect password length\n      case \"passwordLength\":\n        setPasswordLength(event.target.value);\n        break;\n      // ! If checkbox is checked then true - else false\n      case \"mixedCase\":\n        if (event.target.checked) {\n          setMixedCase(true);\n        } else {\n          setMixedCase(false);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Testing..\n  console.log(passwordLength);\n  console.log(mixedCase);\n\n  // ? Define password function\n  const definePassword = event => {\n    event.preventDefault();\n    let calculatingPassword = \"\";\n    for (let i = 0; i < passwordLength; i++) {\n      let index = Math.floor(Math.random() * charset.length);\n      if (mixedCase === true) {\n        if (i > 0 && i % 3 === 0) {\n          calculatingPassword += charset[index].toLocaleUpperCase();\n        } else {\n          calculatingPassword += charset[index];\n        }\n      } else {\n        calculatingPassword += charset[index];\n      }\n    }\n\n    // *  Default password length if no number is selected\n    if (passwordLength < 1) {\n      for (let i = 0; i < 20; i++) {\n        let index = Math.floor(Math.random() * charset.length);\n        if (mixedCase === true) {\n          if (i > 0 && i % 3 === 0) {\n            calculatingPassword += charset[index].toLocaleUpperCase();\n          } else {\n            calculatingPassword += charset[index];\n          }\n        } else {\n          calculatingPassword += charset[index];\n        }\n      }\n    }\n    setPassword(calculatingPassword);\n    // Reset input fields\n    setPasswordLength(\"\");\n\n    // !!! Search how to 'uncheck' checkbox on form submit\n    // setMixedCase();\n  };\n\n  // !!!\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-generator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"password-generator-heading\",\n      children: \"Random Password Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"password-subheadings\",\n        children: \"Choose password length (Default = 20 characters)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"define-number-input\",\n        type: \"number\",\n        name: \"passwordLength\",\n        onChange: collectInput,\n        value: passwordLength,\n        placeholder: \"Password length..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"password-subheadings\",\n          children: \"Use mixed cases?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"mixedCase\",\n          onChange: collectInput,\n          id: \"checkbox\",\n          type: \"checkbox\"\n          //   checked=\"checked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generate-button\",\n        onClick: definePassword,\n        children: \"Generate Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"password-subheadings new-password\",\n        children: \"Your new password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordGenerator, \"FBn8ZEf1inRUE9aQVE1eEkQosW4=\");\n_c = PasswordGenerator;\nexport default PasswordGenerator;\nvar _c;\n$RefreshReg$(_c, \"PasswordGenerator\");","map":{"version":3,"names":["React","useState","PasswordGenerator","charset","password","setPassword","passwordLength","setPasswordLength","mixedCase","setMixedCase","collectInput","event","target","name","value","checked","console","log","definePassword","preventDefault","calculatingPassword","i","index","Math","floor","random","length","toLocaleUpperCase"],"sources":["/home/dci/Desktop/Repos/portfolio-frontend/src/Views/WebApps/Password-Generator/PasswordGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst PasswordGenerator = () => {\n  // Charset\n  const charset = \"abcdefghijklmnopqrstuvwxyz0123456789!ยง$%&/()=?#,;.:-_\";\n\n  // ? State Hooks\n  // Password\n  let [password, setPassword] = useState(\"\");\n  // length of password\n  let [passwordLength, setPasswordLength] = useState();\n  // Mixed Case\n  let [mixedCase, setMixedCase] = useState(false);\n\n  // ? Collect user input Data 'onChange' event\n  const collectInput = (event) => {\n    switch (event.target.name) {\n      // Collect password length\n      case \"passwordLength\":\n        setPasswordLength(event.target.value);\n        break;\n      // ! If checkbox is checked then true - else false\n      case \"mixedCase\":\n        if (event.target.checked) {\n          setMixedCase(true);\n        } else {\n          setMixedCase(false);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Testing..\n  console.log(passwordLength);\n  console.log(mixedCase);\n\n  // ? Define password function\n  const definePassword = (event) => {\n    event.preventDefault();\n\n    let calculatingPassword = \"\";\n\n    for (let i = 0; i < passwordLength; i++) {\n      let index = Math.floor(Math.random() * charset.length);\n\n      if (mixedCase === true) {\n        if (i > 0 && i % 3 === 0) {\n          calculatingPassword += charset[index].toLocaleUpperCase();\n        } else {\n          calculatingPassword += charset[index];\n        }\n      } else {\n        calculatingPassword += charset[index];\n      }\n    }\n\n    // *  Default password length if no number is selected\n    if (passwordLength < 1) {\n      for (let i = 0; i < 20; i++) {\n        let index = Math.floor(Math.random() * charset.length);\n\n        if (mixedCase === true) {\n          if (i > 0 && i % 3 === 0) {\n            calculatingPassword += charset[index].toLocaleUpperCase();\n          } else {\n            calculatingPassword += charset[index];\n          }\n        } else {\n          calculatingPassword += charset[index];\n        }\n      }\n    }\n\n    setPassword(calculatingPassword);\n    // Reset input fields\n    setPasswordLength(\"\");\n\n    // !!! Search how to 'uncheck' checkbox on form submit\n    // setMixedCase();\n  };\n\n  // !!!\n\n  return (\n    <div className=\"password-generator-container\">\n      <h1 className=\"password-generator-heading\">Random Password Generator</h1>\n\n      <form className=\"password-form\">\n        <label className=\"password-subheadings\">\n          Choose password length (Default = 20 characters)\n        </label>\n        <input\n          className=\"define-number-input\"\n          type=\"number\"\n          name=\"passwordLength\"\n          onChange={collectInput}\n          value={passwordLength}\n          placeholder=\"Password length..\"\n        ></input>\n\n        <div className=\"checkbox-container\">\n          <span className=\"password-subheadings\">Use mixed cases?</span>\n          <input\n            name=\"mixedCase\"\n            onChange={collectInput}\n            id=\"checkbox\"\n            type=\"checkbox\"\n            //   checked=\"checked\"\n          />\n        </div>\n        <button className=\"generate-button\" onClick={definePassword}>\n          Generate Password\n        </button>\n\n        <label className=\"password-subheadings new-password\">\n          Your new password:\n        </label>\n        <div className=\"output\">{password}</div>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}