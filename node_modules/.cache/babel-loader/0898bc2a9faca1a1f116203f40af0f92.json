{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Repos/portfolio-frontend/src/Views/WebApps/Calculator/Calculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Imported Components\n\nimport ResultComponent from \"./calculator-ResultComponent\";\nimport KeypadComponent from \"./calculator-KeypadComponent\"; //  Main Calculator component. Exported to 'WebAppPageLayout.js'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  // Hooks\n  let [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\"); //! Testing disabled function...\n\n  const [disable, setDisable] = useState(false); // Array of operators\n\n  const ops = [\"/\", \".\", \"+\", \"*\", \"-\"]; //  Update function\n\n  const updateCalc = value => {\n    if (calc.length > 0) {\n      const last = calc[calc.length - 1];\n      console.log(last);\n      const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n\n      if (ops.includes(last) && ops.includes(value)) {\n        return;\n      }\n    } // check if calc empty ( '' ) or fill ('2-1')\n\n\n    const isEmptyCalc = !calc; // check if value is zero\n\n    const isNotZero = value == 0; // Testing..\n    // console.log(\n    //   \"========value======isEmptyCalc==========isNotZero============\"\n    // );\n    // console.log(value, isEmptyCalc, isNotZero);\n    // console.log(\"====================================\");\n\n    if (isNotZero && isEmptyCalc) {\n      return;\n    }\n\n    setCalc(calc + value);\n\n    if (!ops.includes(value)) {\n      // setResult(eval(calc + value).toString());\n      let userInput = calc + value;\n      let newResult = Function(\"return \" + userInput)();\n      console.log(newResult);\n      setResult(newResult);\n    }\n  };\n\n  const calculate = () => {\n    if (calc === \"\") {\n      setCalc(\"\");\n    } else {\n      const last = calc[calc.length - 1];\n      console.log(last);\n      const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n\n      if (ops.includes(last)) {\n        return;\n      }\n\n      console.log(calc); // setCalc(eval(calc).toString());\n\n      let newResult = Function(\"return \" + calc)();\n      setCalc(newResult);\n    }\n  }; // !!!!\n\n\n  console.log(\"!!!!!!!!\", result); // !!! Need to come back and fix delete error\n  // !!! Delete button function to clear the last entered digit or operator\n\n  const deleteLast = () => {\n    // !\n    if (result.length >= 1 && calc.length >= 1) {\n      setDisable(true);\n      return;\n    }\n\n    if (calc === \"\") {\n      return;\n    }\n\n    const value = calc.slice(0, -1);\n    setCalc(value);\n  }; // Clear button function - clears display\n\n\n  const clearFunction = () => {\n    setCalc(\"\");\n  }; // JSX to be rendered with components\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(ResultComponent, {\n        result: result,\n        calc: calc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KeypadComponent, {\n        clearFunction: clearFunction,\n        deleteLast: deleteLast,\n        calculate: calculate,\n        updateCalc: updateCalc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"dgG0uX6i2LQCduYE3U8g5s4Ste0=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/home/dci/Desktop/Repos/portfolio-frontend/src/Views/WebApps/Calculator/Calculator.js"],"names":["React","useState","ResultComponent","KeypadComponent","Calculator","calc","setCalc","result","setResult","disable","setDisable","ops","updateCalc","value","length","last","console","log","includes","isEmptyCalc","isNotZero","userInput","newResult","Function","calculate","deleteLast","slice","clearFunction"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// Imported Components\nimport ResultComponent from \"./calculator-ResultComponent\";\nimport KeypadComponent from \"./calculator-KeypadComponent\";\n\n//  Main Calculator component. Exported to 'WebAppPageLayout.js'\nconst Calculator = () => {\n  // Hooks\n  let [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  //! Testing disabled function...\n  const [disable, setDisable] = useState(false);\n\n  // Array of operators\n  const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n\n  //  Update function\n  const updateCalc = (value) => {\n    if (calc.length > 0) {\n      const last = calc[calc.length - 1];\n      console.log(last);\n      const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n      if (ops.includes(last) && ops.includes(value)) {\n        return;\n      }\n    }\n    // check if calc empty ( '' ) or fill ('2-1')\n    const isEmptyCalc = !calc;\n    // check if value is zero\n    const isNotZero = value == 0;\n    // Testing..\n    // console.log(\n    //   \"========value======isEmptyCalc==========isNotZero============\"\n    // );\n    // console.log(value, isEmptyCalc, isNotZero);\n    // console.log(\"====================================\");\n    if (isNotZero && isEmptyCalc) {\n      return;\n    }\n\n    setCalc(calc + value);\n\n    if (!ops.includes(value)) {\n      // setResult(eval(calc + value).toString());\n\n      let userInput = calc + value;\n\n      let newResult = Function(\"return \" + userInput)();\n      console.log(newResult);\n\n      setResult(newResult);\n    }\n  };\n\n  const calculate = () => {\n    if (calc === \"\") {\n      setCalc(\"\");\n    } else {\n      const last = calc[calc.length - 1];\n      console.log(last);\n      const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n      if (ops.includes(last)) {\n        return;\n      }\n\n      console.log(calc);\n      // setCalc(eval(calc).toString());\n\n      let newResult = Function(\"return \" + calc)();\n\n      setCalc(newResult);\n    }\n  };\n\n  // !!!!\n  console.log(\"!!!!!!!!\", result);\n\n  // !!! Need to come back and fix delete error\n  // !!! Delete button function to clear the last entered digit or operator\n  const deleteLast = () => {\n    // !\n    if (result.length >= 1 && calc.length >= 1) {\n      setDisable(true);\n      return;\n    }\n\n    if (calc === \"\") {\n      return;\n    }\n\n    const value = calc.slice(0, -1);\n    setCalc(value);\n  };\n\n  // Clear button function - clears display\n  const clearFunction = () => {\n    setCalc(\"\");\n  };\n\n  // JSX to be rendered with components\n  return (\n    <div className=\"calculator-container\">\n      <div className=\"calculator\">\n        {/* Result Component - display output */}\n        <ResultComponent result={result} calc={calc} />\n\n        {/* Keypad Component - buttons */}\n        <KeypadComponent\n          clearFunction={clearFunction}\n          deleteLast={deleteLast}\n          calculate={calculate}\n          updateCalc={updateCalc}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}