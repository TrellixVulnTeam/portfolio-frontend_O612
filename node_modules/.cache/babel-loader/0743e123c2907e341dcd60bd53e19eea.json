{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Repos/portfolio-frontend/src/Views/WebApps/Calculator/Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Imported Components\nimport ResultComponent from \"./calculator-ResultComponent\";\nimport KeypadComponent from \"./calculator-KeypadComponent\";\n\n//  Main Calculator component. Exported to 'WebAppPageLayout.js'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  // Hooks\n  let [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  //! Testing disabled function...\n  const [disable, setDisable] = useState(false);\n\n  // Array of operators\n  const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n\n  //  Update function\n  const updateCalc = value => {\n    if (calc.length > 0) {\n      const last = calc[calc.length - 1];\n      console.log(last);\n      const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n      if (ops.includes(last) && ops.includes(value)) {\n        return;\n      }\n    }\n    // check if calc empty ( '' ) or fill ('2-1')\n    const isEmptyCalc = !calc;\n    // check if value is zero\n    const isNotZero = value == 0;\n    // Testing..\n    // console.log(\n    //   \"========value======isEmptyCalc==========isNotZero============\"\n    // );\n    // console.log(value, isEmptyCalc, isNotZero);\n    // console.log(\"====================================\");\n    if (isNotZero && isEmptyCalc) {\n      return;\n    }\n    setCalc(calc + value);\n    if (!ops.includes(value)) {\n      // setResult(eval(calc + value).toString());\n\n      let userInput = calc + value;\n      let newResult = Function(\"return \" + userInput)();\n      console.log(newResult);\n      setResult(newResult);\n    }\n  };\n  const calculate = () => {\n    if (calc === \"\") {\n      setCalc(\"\");\n    } else {\n      const last = calc[calc.length - 1];\n      console.log(last);\n      const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n      if (ops.includes(last)) {\n        return;\n      }\n      console.log(calc);\n      // setCalc(eval(calc).toString());\n\n      let newResult = Function(\"return \" + calc)();\n      setCalc(newResult);\n    }\n  };\n\n  // !!!!\n  console.log(\"!!!!!!!!\", result);\n\n  // !!! Need to come back and fix delete error\n  // !!! Delete button function to clear the last entered digit or operator\n  const deleteLast = () => {\n    // !\n    if (result.length >= 1 && calc.length >= 1) {\n      setDisable(true);\n      return;\n    }\n    if (calc === \"\") {\n      return;\n    }\n    const value = calc.slice(0, -1);\n    setCalc(value);\n  };\n\n  // Clear button function - clears display\n  const clearFunction = () => {\n    setCalc(\"\");\n  };\n\n  // JSX to be rendered with components\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(ResultComponent, {\n        result: result,\n        calc: calc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KeypadComponent, {\n        clearFunction: clearFunction,\n        deleteLast: deleteLast,\n        calculate: calculate,\n        updateCalc: updateCalc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"dgG0uX6i2LQCduYE3U8g5s4Ste0=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","ResultComponent","KeypadComponent","Calculator","calc","setCalc","result","setResult","disable","setDisable","ops","updateCalc","value","length","last","console","log","includes","isEmptyCalc","isNotZero","userInput","newResult","Function","calculate","deleteLast","slice","clearFunction"],"sources":["/home/dci/Desktop/Repos/portfolio-frontend/src/Views/WebApps/Calculator/Calculator.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n// Imported Components\nimport ResultComponent from \"./calculator-ResultComponent\";\nimport KeypadComponent from \"./calculator-KeypadComponent\";\n\n//  Main Calculator component. Exported to 'WebAppPageLayout.js'\nconst Calculator = () => {\n  // Hooks\n  let [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  //! Testing disabled function...\n  const [disable, setDisable] = useState(false);\n\n  // Array of operators\n  const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n\n  //  Update function\n  const updateCalc = (value) => {\n    if (calc.length > 0) {\n      const last = calc[calc.length - 1];\n      console.log(last);\n      const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n      if (ops.includes(last) && ops.includes(value)) {\n        return;\n      }\n    }\n    // check if calc empty ( '' ) or fill ('2-1')\n    const isEmptyCalc = !calc;\n    // check if value is zero\n    const isNotZero = value == 0;\n    // Testing..\n    // console.log(\n    //   \"========value======isEmptyCalc==========isNotZero============\"\n    // );\n    // console.log(value, isEmptyCalc, isNotZero);\n    // console.log(\"====================================\");\n    if (isNotZero && isEmptyCalc) {\n      return;\n    }\n\n    setCalc(calc + value);\n\n    if (!ops.includes(value)) {\n      // setResult(eval(calc + value).toString());\n\n      let userInput = calc + value;\n\n      let newResult = Function(\"return \" + userInput)();\n      console.log(newResult);\n\n      setResult(newResult);\n    }\n  };\n\n  const calculate = () => {\n    if (calc === \"\") {\n      setCalc(\"\");\n    } else {\n      const last = calc[calc.length - 1];\n      console.log(last);\n      const ops = [\"/\", \".\", \"+\", \"*\", \"-\"];\n      if (ops.includes(last)) {\n        return;\n      }\n\n      console.log(calc);\n      // setCalc(eval(calc).toString());\n\n      let newResult = Function(\"return \" + calc)();\n\n      setCalc(newResult);\n    }\n  };\n\n  // !!!!\n  console.log(\"!!!!!!!!\", result);\n\n  // !!! Need to come back and fix delete error\n  // !!! Delete button function to clear the last entered digit or operator\n  const deleteLast = () => {\n    // !\n    if (result.length >= 1 && calc.length >= 1) {\n      setDisable(true);\n      return;\n    }\n\n    if (calc === \"\") {\n      return;\n    }\n\n    const value = calc.slice(0, -1);\n    setCalc(value);\n  };\n\n  // Clear button function - clears display\n  const clearFunction = () => {\n    setCalc(\"\");\n  };\n\n  // JSX to be rendered with components\n  return (\n    <div className=\"calculator-container\">\n      <div className=\"calculator\">\n        {/* Result Component - display output */}\n        <ResultComponent result={result} calc={calc} />\n\n        {/* Keypad Component - buttons */}\n        <KeypadComponent\n          clearFunction={clearFunction}\n          deleteLast={deleteLast}\n          calculate={calculate}\n          updateCalc={updateCalc}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}