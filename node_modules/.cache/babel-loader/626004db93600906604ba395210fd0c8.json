{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Repos/portfolio-frontend/src/Components/NavBar/NavBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MobileNavigation from \"./MobileNavigation\";\nimport Navigation from \"./Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  // State hooks\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\n  const [visible, setVisible] = useState(true);\n\n  // ? Handle scroll  - scroll is visible on scroll up and not on scroll down\n  const handleScroll = () => {\n    // find current scroll position\n    const currentScrollPos = window.scrollY;\n\n    // Set state based on location\n    setVisible(prevScrollPos > currentScrollPos || currentScrollPos < 20);\n\n    // Set state to new scroll position\n    setPrevScrollPos(currentScrollPos);\n  };\n\n  // useEffect\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  });\n\n  // ? Detect scroll direction to change colour on scroll up\n  const [bgChange, setBgChange] = useState(false);\n  const changeNavBarColor = () => {\n    if (window.scrollY > 80) {\n      setBgChange(true);\n    } else {\n      setBgChange(false);\n    }\n  };\n  window.addEventListener(\"scroll\", changeNavBarColor);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      top: visible ? \"0\" : \"-100px\"\n    },\n    className: \"nav-bar nav-coloured-bg\",\n    children: [/*#__PURE__*/_jsxDEV(MobileNavigation, {\n      bgChange: bgChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      bgChange: bgChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(NavBar, \"J/jVV83raeK3btZrB7s9/hK3R/0=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","MobileNavigation","Navigation","NavBar","prevScrollPos","setPrevScrollPos","visible","setVisible","handleScroll","currentScrollPos","window","scrollY","addEventListener","removeEventListener","bgChange","setBgChange","changeNavBarColor","top"],"sources":["/home/dci/Desktop/Repos/portfolio-frontend/src/Components/NavBar/NavBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MobileNavigation from \"./MobileNavigation\";\nimport Navigation from \"./Navigation\";\n\nconst NavBar = () => {\n  // State hooks\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\n  const [visible, setVisible] = useState(true);\n\n  // ? Handle scroll  - scroll is visible on scroll up and not on scroll down\n  const handleScroll = () => {\n    // find current scroll position\n    const currentScrollPos = window.scrollY;\n\n    // Set state based on location\n    setVisible(prevScrollPos > currentScrollPos || currentScrollPos < 20);\n\n    // Set state to new scroll position\n    setPrevScrollPos(currentScrollPos);\n  };\n\n  // useEffect\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  });\n\n  // ? Detect scroll direction to change colour on scroll up\n  const [bgChange, setBgChange] = useState(false);\n\n  const changeNavBarColor = () => {\n    if (window.scrollY > 80) {\n      setBgChange(true);\n    } else {\n      setBgChange(false);\n    }\n  };\n\n  window.addEventListener(\"scroll\", changeNavBarColor);\n\n  return (\n    <div\n      style={{ top: visible ? \"0\" : \"-100px\" }}\n      className=\"nav-bar nav-coloured-bg\"\n    >\n      <MobileNavigation bgChange={bgChange} />\n      <Navigation bgChange={bgChange} />\n    </div>\n  );\n};\n\nexport default NavBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMS,YAAY,GAAG,MAAM;IACzB;IACA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,OAAO;;IAEvC;IACAJ,UAAU,CAACH,aAAa,GAAGK,gBAAgB,IAAIA,gBAAgB,GAAG,EAAE,CAAC;;IAErE;IACAJ,gBAAgB,CAACI,gBAAgB,CAAC;EACpC,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACdU,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IAE/C,OAAO,MAAME,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;EACjE,CAAC,CAAC;;EAEF;EACA,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMiB,iBAAiB,GAAG,MAAM;IAC9B,IAAIN,MAAM,CAACC,OAAO,GAAG,EAAE,EAAE;MACvBI,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACLA,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAEDL,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEI,iBAAiB,CAAC;EAEpD,oBACE;IACE,KAAK,EAAE;MAAEC,GAAG,EAAEX,OAAO,GAAG,GAAG,GAAG;IAAS,CAAE;IACzC,SAAS,EAAC,yBAAyB;IAAA,wBAEnC,QAAC,gBAAgB;MAAC,QAAQ,EAAEQ;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACxC,QAAC,UAAU;MAAC,QAAQ,EAAEA;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEV,CAAC;AAAC,GA9CIX,MAAM;AAAA,KAANA,MAAM;AAgDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}